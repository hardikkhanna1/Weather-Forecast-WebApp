{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Hack2Skill\\\\Client\\\\weather-app\\\\src\\\\Components\\\\Dashboard\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherDashboard = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState('');\n  const API_KEY = '7cf7513e537a4eb18e78f7343c7c54ad';\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await fetch(`https://api.weatherbit.io/v2.0/current?city=${city}&key=${API_KEY}`);\n        if (!response.ok) {\n          throw new Error('City not found');\n        }\n        const data = await response.json();\n        setWeatherData(data[data][0]);\n      } catch (error) {\n        console.error('Error fetching weather data:', error.message);\n        setWeatherData(null);\n      }\n    };\n    fetchWeatherData();\n  }, [city, API_KEY]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"cityInput\",\n      children: \"Enter City:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"cityInput\",\n      value: city,\n      onChange: e => setCity(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [weatherData.city_name, \", \", weatherData.datetime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"TimeZone: \", weatherData.timezone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weatherData.weather.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"AQI: \", weatherData.aqi, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind Speed: \", weatherData.wind_spd, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherDashboard, \"DsqvnnlcFEIRcSFsBVRH0wDfhX8=\");\n_c = WeatherDashboard;\nexport default WeatherDashboard;\nvar _c;\n$RefreshReg$(_c, \"WeatherDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherDashboard","_s","weatherData","setWeatherData","city","setCity","API_KEY","fetchWeatherData","response","fetch","ok","Error","data","json","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","city_name","datetime","timezone","weather","description","temp","aqi","wind_spd","_c","$RefreshReg$"],"sources":["D:/Project/Hack2Skill/Client/weather-app/src/Components/Dashboard/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst WeatherDashboard = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [city, setCity] = useState(''); \r\n\r\n  const API_KEY = '7cf7513e537a4eb18e78f7343c7c54ad';\r\n\r\n  useEffect(() => {\r\n    \r\n    const fetchWeatherData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://api.weatherbit.io/v2.0/current?city=${city}&key=${API_KEY}`\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error('City not found');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setWeatherData(data[data][0]);\r\n      } catch (error) {\r\n        console.error('Error fetching weather data:', error.message);\r\n        setWeatherData(null);\r\n      }\r\n    };\r\n\r\n    fetchWeatherData();\r\n  }, [city, API_KEY]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Weather Dashboard</h2>\r\n      <label htmlFor=\"cityInput\">Enter City:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"cityInput\"\r\n        value={city}\r\n        onChange={(e) => setCity(e.target.value)}\r\n      />\r\n\r\n      {weatherData && (\r\n        <div>\r\n          <h3>{weatherData.city_name}, {weatherData.datetime}</h3>\r\n          <p>TimeZone: {weatherData.timezone}</p>\r\n          <p>{weatherData.weather.description}</p>\r\n          <p>Temperature: {weatherData.temp}Â°C</p>\r\n          <p>AQI: {weatherData.aqi}%</p>\r\n          <p>Wind Speed: {weatherData.wind_spd} m/s</p>\r\n          \r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherDashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}